"use client";
// import type { Metadata } from "next";
// i
// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

import "./globals.css";
import { ReactNode } from "react";
import { Noto_Sans, Sour_Gummy } from "next/font/google";
import { Toaster } from "sonner";

import Navbar from "@/components/layout/Navbar";
import { Footer } from "@/components/layout/Footer";
import { initWallets } from "@/features/wallet/init";
import { ThemeProvider } from "next-themes";
import { WalletOverviewDrawer } from "@/features/wallet/components/drawers/WalletOverviewDrawer";
import { WalletConnectDialog } from "@/features/wallet/components/modals/WalletConnectDialog";
import { NetworkSelectorManager } from "@/features/network/components/manager/NetworkSelectorManager";

import { AppInitializer } from "@/components/layout/AppInitializer";

const sourGummy = Sour_Gummy({
  subsets: ["latin"],
  weight: ["400"],
  variable: "--font-logo",
  display: "swap",
});

const noto_sans = Noto_Sans({
  subsets: ["latin"],
  weight: ["400", "700"],
  variable: "--font-noto",
  display: "swap",
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  initWallets();
  // Safe to call here: this function doesn't use React hooks.
  // It's only responsible for registering available wallet adapters
  // into a global registry or Zustand store. Since it's a pure JS call,
  // we can execute it at the top level of the layout without violating
  // React's Rules of Hook

  // Important: React hooks like `useEffect`, `useStore`, etc.
  // MUST NOT be used directly in this `layout.tsx` file.
  // Layout files in Next.js are executed outside of the React rendering context,
  // so using hooks here would break the Rules of Hooks and cause runtime errors.
  // Instead, any hook logic must go into a client component (e.g. `WalletStateInitializer`).

  return (
    <html
      lang="en"
      className={noto_sans.className}
      suppressContentEditableWarning
    >
      <body className="flex flex-col min-h-screen bg-background mb-7">
        <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
          <>
            <AppInitializer />
          </>
          <Navbar />
          <main className="flex flex-col flex-1 p-4">{children}</main>
          <>
            <NetworkSelectorManager />
            <WalletConnectDialog />
            <WalletOverviewDrawer />
          </>
          <Footer />
        </ThemeProvider>
        <Toaster richColors position="bottom-right" />
      </body>
    </html>
  );
}
